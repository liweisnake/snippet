<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.levi.reusable</groupId>
	<artifactId>reusable</artifactId>
	<version>4.1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>levi :: Example :: reusable</name>
 
	<properties>
		<!-- 主要依赖库的版本定义 -->
		<springside.version>4.1.0-SNAPSHOT</springside.version>
		<spring.version>3.2.0.RELEASE</spring.version>
		<hibernate.version>4.1.9.Final</hibernate.version>
		<spring-data-jpa.version>1.2.0.RELEASE</spring-data-jpa.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<sitemesh.version>2.4.2</sitemesh.version>
		<shiro.version>1.2.1</shiro.version>
		<hibernate-validator.version>4.3.1.Final</hibernate-validator.version>
		<jackson.version>2.1.2</jackson.version>
		<slf4j.version>1.7.2</slf4j.version>
		<logback.version>1.0.9</logback.version>
		<commons-lang3.version>3.1</commons-lang3.version>
		<guava.version>13.0.1</guava.version>
		<joda-time.version>2.1</joda-time.version>
		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<selenium.version>2.28.0</selenium.version>
		<jetty.version>7.6.8.v20121106</jetty.version>
		<h2.version>1.3.170</h2.version>

		<!-- Plugin的属性定义 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.6</jdk.version>

		<!-- 项目属性 -->
		<jdbc.driver.groupId>com.h2database</jdbc.driver.groupId>
		<jdbc.driver.artifactId>h2</jdbc.driver.artifactId>
		<jdbc.driver.version>${h2.version}</jdbc.driver.version>
		<!--
			<jdbc.driver.groupId>mysql</jdbc.driver.groupId>
			<jdbc.driver.artifactId>mysql-connector-java</jdbc.driver.artifactId>
			<jdbc.driver.version>5.1.21</jdbc.driver.version>
		-->	
	</properties>
	
	<repositories>
		<!-- 如有Nexus私服, 取消注释并指向正确的服务器地址.
		<repository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://localhost:8081/nexus/content/groups/public</url> 
		</repository>
		-->
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>http://repo.maven.apache.org/maven2</url>	
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- 设定插件仓库 如有Nexus私服, 取消注释并指向正确的服务器地址. 
	<pluginRepositories> 
		<pluginRepository> 
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://localhost:8081/nexus/content/groups/public</url> 
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	-->

	<!-- 依赖项定义 -->
	<dependencies>
		<!-- SPRINGSIDE -->

		<!-- AOP begin -->
		<!-- AOP end -->

		<!-- PERSISTENCE begin -->
		<!-- hibernate -->

		<!-- spring data access -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring-data-jpa.version}</version>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit-dep</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- dbcp connection pool -->

		<!-- jdbc driver -->
		<!-- PERSISTENCE end -->

		<!-- WEB begin -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		


		<!-- WEB end -->
		
		<!-- SECURITY begin -->
		<!-- SECURITY end -->
		
		<!-- JSR303  BeanValidator -->
		
		<!-- JSON begin -->
		<!-- JSON end -->
		
		<!-- LOGGING begin -->

		
		<!-- log4j 实际调用slf4j -->
		<!-- common-logging 实际调用slf4j -->
		<!-- java.util.logging 实际调用slf4j -->
	      	
		<!-- LOGGING end -->

		<!-- GENERAL UTILS begin -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<!-- GENERAL UTILS end -->

		<!-- TEST begin -->




		<!-- selenium 2.0 -->

		<!-- h2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- jetty -->
		<!-- TEST end -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>3.2.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-core</artifactId>
			<version>5.8-SNAPSHOT</version>
			<type>bundle</type>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11-20120805-1225</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.2.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-core</artifactId>
			<version>2.1.9.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>apache-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
			<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>				
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- compiler插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- war打包插件, 设定war包名称不带版本号 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warName>${project.artifactId}</warName>
				</configuration>
			</plugin>

			<!-- test插件, 仅测试名称为*Test的类,使用支持分组测试的surefire-junit47 driver -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<argLine>-Xmx256M</argLine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.12.4</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- 增加functional test的Source目录 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-functional-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/functional</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- cobertura插件, 设置不需要计算覆盖率的类 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<instrumentation>
						<excludes>
							<exclude>**/entity/**/*.class</exclude>
							<exclude>**/*Controller.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>

			<!-- eclipse插件, 设定wtp版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<!-- 增加设置项目encoding的文件 -->
					<additionalConfig>
						<file>
							<name>.settings/org.eclipse.core.resources.prefs</name>
							<content>
					                <![CDATA[eclipse.preferences.version=1${line.separator}encoding/<project>=${project.build.sourceEncoding}${line.separator}]]>
							</content>
						</file>
					</additionalConfig>
				</configuration>
			</plugin>
			
			<!-- enforcer插件, 设定环境与依赖的规则 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>enforce-banned-dependencies</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
                  					<version>3.0.3</version>
                				</requireMavenVersion>
                				<requireJavaVersion>
                  					<version>1.6</version>
                				</requireJavaVersion>
								<bannedDependencies>
									<searchTransitive>true</searchTransitive>
									<!-- 避免引入过期的jar包 -->
									<excludes>
										<exclude>commons-logging</exclude>
										<exclude>aspectj:aspectj*</exclude>
										<exclude>org.springframework:2.*</exclude>
										<exclude>org.springframework:3.0.*</exclude>
									</excludes>
								</bannedDependencies>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- jetty插件, 设定context path与spring profile -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<systemProperties>
						<systemProperty>
							<name>spring.profiles.active</name>
							<value>development</value>
						</systemProperty>
					</systemProperties>
					<useTestClasspath>true</useTestClasspath>
				
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>

			<!-- resource插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			
			<!-- install插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.4</version>
			</plugin>

			<!-- clean插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			
			<!-- ant插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
			</plugin>
			
			<!-- dependency插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.6</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- 执行functional test -->
		<profile>
			<id>functional-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>-Xmx256M -XX:MaxPermSize=128m</argLine>
							<includes>
								<include>**/*FT.java</include>
							</includes>
							<!-- 支持taglib tld文件查找的必要设置 -->
							<useSystemClassLoader>false</useSystemClassLoader>
							<!-- 将mvn命令行传入的selenium driver参数传入surefire的JVM -->
							<systemPropertyVariables>
								<selenium.driver>${selenium.driver}</selenium.driver>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- 执行@Category(Smoke.class)的TestCase -->
		<profile>
			<id>run-smoke</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<includedGroups>org.springside.modules.test.category.Smoke</includedGroups>
						</configuration>
					</plugin>				
				</plugins>
			</build>
		</profile>
		
		<!-- 忽略所有@Category(UnStable.class)的TestCase -->
		<profile>
			<id>skip-unstable</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludedGroups>org.springside.modules.test.category.UnStable</excludedGroups>
						</configuration>
					</plugin>				
				</plugins>
			</build>
		</profile>
		
		<!-- 刷新开发环境数据库 -->
		<profile>
			<id>refresh-db</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<configuration>
							<target>
								<property file="src/main/resources/application.development.properties" />
								<property file="src/main/resources/application.properties" />
								<sql driver="${jdbc.driver}" url="${jdbc.url}" userid="${jdbc.username}" password="${jdbc.password}" onerror="continue" encoding="${project.build.sourceEncoding}">
									<classpath refid="maven.test.classpath" />
									<transaction src="src/main/resources/sql/h2/schema.sql"/>
									<transaction src="src/test/resources/data/h2/import-data.sql"/>
								</sql>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
